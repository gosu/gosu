language: cpp

matrix:
  include:
    # Ubuntu 16.04 Xenial Xerus
    - os: linux
      dist: xenial
      sudo: required
      compiler: gcc
    # macOS 10.14 Mojave with Xcode 11.0
    - os: osx
      osx_image: xcode11
      compiler: clang
    # macOS 10.15 Catalina with Xcode 11.4
    - os: osx
      osx_image: xcode11.4
      compiler: clang

# Linux dependencies
# See: https://github.com/gosu/gosu/wiki/Getting-Started-on-Linux
addons:
  apt:
    packages:
      - libsdl2-dev
      - libgl1-mesa-dev
      - libfontconfig1-dev
      - libopenal-dev
      - libsndfile1-dev
      - libmpg123-dev
      # For Ruby
      - ruby-dev
      - rake
      # For C++
      - cmake
      # For Linux Soundtests (like xvfb for sound: lets us headlessly run audio tests)
      - pulseaudio

services:
  - xvfb

before_install:
  # Print the Ruby configuration to see what's defined in CXXFLAGS etc.
  - ruby -rrbconfig -e 'RbConfig::CONFIG.each { |k, v| puts [k, v].join("=") }'

  # Do some macOS-specific preparations
  - |
    if [ $TRAVIS_OS_NAME == osx ]; then
      rvm use ruby
      # Mac dependencies
      # See: https://github.com/gosu/gosu/wiki/Getting-Started-on-OS-X
      brew update
      brew install sdl2

      # Update the system RubyGems on macOS and install CocoaPods.
      gem update --system
      gem install cocoapods
    fi

  # Dependencies for 'rake gem' (not for actually using Gosu)
  - gem update --system
  - gem install rake-compiler minitest --no-doc


before_script:
  # Enable "dummy" devices for audio and video on Linux.
  - |
    if [ $TRAVIS_OS_NAME != osx ]; then
      sudo usermod -a -G audio $USER
    fi

# Minimal git coverage.
branches:
  only:
  - master
git:
  depth: 1

env:
  global:
    # 'rake gem' relies on this.
    - GOSU_RELEASE_VERSION=9.9.9
    # To silence this warning:
    # "WARNING: CocoaPods requires your terminal to be using UTF-8 encoding."
    - LANG=en_US.UTF-8

install:
  # Install Ruby/Gosu using RubyGems.
  - |
    rake gem
    gem install pkg/gosu-9.9.9.gem --no-doc

  # Install Gosu for C++ using CMake.
  - |
    mkdir -p build
    cd build
    cmake ..
    make
    sudo make install
    cd ..

  # Compile Gosu for macOS and iOS using CocoaPods.
  - |
    if [ $TRAVIS_OS_NAME == osx ]; then
      cd examples/Tutorial
      pod install
      xcodebuild build -workspace Tutorial.xcworkspace -scheme Tutorial
      cd ../Tutorial-Touch
      pod install
      xcodebuild build -workspace Tutorial-Touch.xcworkspace -scheme Tutorial-Touch -destination 'platform=iOS Simulator,name=iPad Air'
      cd ../..
    fi

script:
  # Run Ruby/Gosu tests and compile C++ examples.
  - |
    if [ $TRAVIS_OS_NAME == osx ]; then
      rake -rgosu test
    else
      sg audio 'rake -rgosu test'
    fi

  # Compile C++ examples using CMake.
  - |
    mkdir -p examples/build &&
    cd examples/build &&
    cmake .. &&
    make
